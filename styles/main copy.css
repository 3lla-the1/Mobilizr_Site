/****************************************
  1. Basic Reset & Body Fallback
****************************************/
body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #c6b7b7; /* Fallback if Tailwind fails */
    color: #333;
  }
  
  /****************************************
    2. Navbar Styling
  ****************************************/
  nav a {
    color: rgb(117, 98, 98);
    margin: 0 10px;
    text-decoration: none;
    transition: color 0.3s ease;
  }
  nav a:hover {
    color: black;
  }
  
  /****************************************
    3. Off-white Content Boxes
  ****************************************/
  .content-box {
    /* If you want them to show immediately: */
    opacity: 1;
    transform: translateY(0); /* or no transform at all */
    transition: none;        /* or keep a transition for any hover effect, etc. */
    
    /* ... plus your other properties: */
    background: #ffffff;
    border-radius: 20px;
    padding: 40px;
    width: 90vw;
    max-width: 1200px;
    min-height: 80vh;
    margin: 0 auto;
    text-align: center;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
  }
  
  
  /****************************************
    4. Fade-in Class (Activated by JS)
  ****************************************/
 .fade-in {
  opacity: 0;
  transform: translateY(40px) scale(0.95);
  /* Use a slightly longer duration and a custom cubic-bezier */
  transition: opacity 0.8s cubic-bezier(0.22, 1, 0.36, 1),
              transform 0.8s cubic-bezier(0.22, 1, 0.36, 1);
}

.fade-in.visible {
  opacity: 1;
  transform: translateY(0) scale(1);
}


:root {
  --color-bg1: rgb(0, 106, 167);
  --color-bg2: rgb(0, 17, 82);
  --color1: 255, 205, 0;   /* Swedish yellow */
  --color2: 221, 74, 255;
  --color3: 255, 163, 77;  /* pastel orange */
  --color4: 200, 50, 50;
  --color5: 0, 180, 235;
  --color-interactive: 140, 100, 255;
  --circle-size: 80%;
  --blending: hard-light;
}

/* The overall wrapper */
.gradient-bg {
  position: fixed;  /* pinned behind everything */
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;    /* just the viewport height */
  z-index: -1;      /* behind your content */
  overflow: hidden;
  background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2));
}

.gradient-bg svg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;  /* instead of 0 */
  height: 100%; /* instead of 0 */
  pointer-events: none; /* So it doesn't block any clicks */
}


.gradients-container {
  filter: url(#goo) blur(40px);
  width: 100%;
  height: 100%;
  position: relative;
}

/* Each of these .g# classes is one colored circle that animates */
.g1, .g2, .g3, .g4, .g5 {
  position: absolute;
  background: radial-gradient(circle at center,
    rgba(var(--color1), 0.8) 0%,
    rgba(var(--color1), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);
  width: var(--circle-size);
  height: var(--circle-size);
  top: calc(50% - var(--circle-size) / 2);
  left: calc(50% - var(--circle-size) / 2);
  transform-origin: center center;
  animation: moveVertical 30s ease infinite;
  opacity: 1;
}

/* Tweak each blobâ€™s background color or animation individually */
.g2 {
  background: radial-gradient(circle at center,
    rgba(var(--color2), 0.8) 0%,
    rgba(var(--color2), 0) 50%) no-repeat;
  animation: moveInCircle 20s reverse infinite;
  transform-origin: calc(50% - 400px);
}

.g3 {
  background: radial-gradient(circle at center,
    rgba(var(--color3), 0.8) 0%,
    rgba(var(--color3), 0) 50%) no-repeat;
  animation: moveInCircle 40s linear infinite;
  top: calc(50% - var(--circle-size) / 2 + 200px);
  left: calc(50% - var(--circle-size) / 2 - 500px);
  transform-origin: calc(50% + 400px);
}

.g4 {
  background: radial-gradient(circle at center,
    rgba(var(--color4), 0.8) 0%,
    rgba(var(--color4), 0) 50%) no-repeat;
  animation: moveHorizontal 40s ease infinite;
  transform-origin: calc(50% - 200px);
  opacity: 0.7;
}

.g5 {
  background: radial-gradient(circle at center,
    rgba(var(--color5), 0.8) 0%,
    rgba(var(--color5), 0) 50%) no-repeat;
  animation: moveInCircle 20s ease infinite;
  width: calc(var(--circle-size) * 2);
  height: calc(var(--circle-size) * 2);
  top: calc(50% - var(--circle-size));
  left: calc(50% - var(--circle-size));
  transform-origin: calc(50% - 800px) calc(50% + 200px);
}

/* This is the interactive blob that the JS will move around */
.interactive {
  position: absolute;
  background: radial-gradient(circle at center,
    rgba(var(--color-interactive), 0.8) 0%,
    rgba(var(--color-interactive), 0) 50%) no-repeat;
  mix-blend-mode: var(--blending);
  width: 100%;
  height: 100%;
  top: -50%;
  left: -50%;
  opacity: 0.7;
}

/* Keyframes for swirling & moving the background circles */
@keyframes moveInCircle {
  0% { transform: rotate(0deg); }
  50% { transform: rotate(180deg); }
  100% { transform: rotate(360deg); }
}

@keyframes moveVertical {
  0% { transform: translateY(-50%); }
  50% { transform: translateY(50%); }
  100% { transform: translateY(-50%); }
}

@keyframes moveHorizontal {
  0%   { transform: translateX(-50%) translateY(-10%); }
  50%  { transform: translateX(50%)  translateY(10%); }
  100% { transform: translateX(-50%) translateY(-10%); }
}

  

  /****************************************
    5. Gradient Background Animation
  ****************************************/
  /* @keyframes gradientWave {
    0% { background-position: 0% 50%; }
    25% { background-position: 50% 0%; }
    50% { background-position: 100% 50%; }
    75% { background-position: 50% 100%; }
    100% { background-position: 0% 50%; }
  } */
  
  /* body {
    background: linear-gradient(270deg, #030b6b, #0843a9, #5c95f6);
    background-size: 400% 400%;
    animation: gradientWave 30s ease-in-out infinite;
  } */
  

  /****************************************
    6. Responsive Content Box
    #fcdf68, #ec4899, #8b5cf6
  ****************************************/
  @media (max-width: 768px) {
    .content-box {
      width: 100%;       /* Slightly wider on mobile, but still see gradient edges */
      min-height: auto; /* Let height shrink if needed */
    }
  }
  

/****************************************
7. Style for the close (X) button
****************************************/
.close-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 2rem;
    height: 2rem;
    font-size: 1.5rem;
    color: black;
    background: transparent;
    border: none;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  .close-button:hover {
    background-color: rgba(0, 0, 0, 0.1);
    border-radius: 50%;
  }
  
  /* Email Input styling */
  input[type="email"] {
    background-color: #f9f9f9;
    border: 1px solid #ccc;
    border-radius: 9999px; /* fully rounded */
    padding: 0.75rem 1.25rem;
    font-size: 1rem;
    transition: border-color 0.2s, box-shadow 0.2s;
  }
  input[type="email"]:focus {
    outline: none;
    border-color: #007aff;
    box-shadow: 0 0 0 2px rgba(0, 122, 255, 0.2);
  }
  
@keyframes shake {
    0%, 100% { transform: translateX(0); }
    20%, 60% { transform: translateX(-5px); }
    40%, 80% { transform: translateX(5px); }
}
.animate-shake {
    animation: shake 0.4s ease-in-out !important;
    border: 2px solid #FFB3B3(21, 0, 255) !important; /* Ensure visibility */
}

.border-red-500 {
    border: 2px solid #FFB3B3 !important; /* Soft Apple-like Red */
    box-shadow: 0 0 5px rgba(255, 179, 179, 0.5);
}
